name: VIP Scans and code style checks
on:
  push:
    branches:
      - 'develop'
      - 'master'
      - 'release-*'

    pull_request:
      branches:
        - '*'

jobs:
  phpcs:
    name: PHPCS checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup image cache
        run: mkdir -p ~/docker-image-cache

      - name: Calculate cache key
        id: docker-image-cache
        uses: actions/cache@v1
        with:
          path: ~/docker-image-cache
          key: docker-image-cache-${{ hashFiles('./dev-workspace') }}

      - name: Build dev-workspace image and cache it
        if: steps.docker-image-cache.outputs.cache-hit != 'true'
        working-directory: ./dev-workspace
        run: |
          ./build
          docker save -o ~/docker-image-cache/alledia-future-dev-workspace-terminal.tar alledia/future-dev-workspace-terminal

      - name: Load dev-workspace image from cache
        if: steps.docker-image-cache.outputs.cache-hit == 'true'
        run: docker load -i ~/docker-image-cache/alledia-future-dev-workspace-terminal.tar

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ubuntu-20.04-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ubuntu-20.04-composer-

      - name: Composer install
        working-directory: ./dev-workspace
        run: ./run composer install --prefer-dist --no-progress --no-suggest --no-interaction --ignore-platform-reqs

      - name: Run PHPCS on dev-workspace
        working-directory: ./dev-workspace
        run: ./run vendor/bin/phpcs
